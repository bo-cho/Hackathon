body {
  margin: 0px;
}

header {
  background-color: #8ac5c5;
  width: 100%;
  height: 50px;
  margin: 0px;
}

.header {
  text-align: center;
  color: #fff;
  padding-top: 15px;
}

.main-container {
  margin: 20px 20px 60px 20px;
}

.post-container {
  border: 1px solid #d6d6d6;
  border-radius: 10px;
  margin: 20px 0px;
}

.post-top-container {
  display: flex;
  align-items: center;
  margin: 10px 0px;
}

.icon-img {
  border-radius: 25ch;
  margin-right: 10px;
}

.username {
  color: #484848;
  font-size: 13px;
  margin-right: 10px;
}

.post-time-ago {
  color: #484848;
  font-size: 13px;
}

.boby-text {
  font-size: 13px;
  color: #484848;
  padding-left: 50px;
}

.post-buttom-container {
  padding: 5px 50px;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.post-buttom-container img {
  margin-right: 5px;
}

.post-buttom-container span {
  font-size: 13px;
}

.heart-count {
  font-size: 11px;
  margin-right: 20px;
  align-items: center;
}

.analytics-container {
  display: none;
  background-color: #f1f1f1;
  height: 230px;
  margin: 10px 10px;
  border-radius: 10%;
}

.analytics > span {
  font-size: 14px;
  color: #484848;
  margin-left: 35px;
}

.graph-container {
  display: flex;
}

.graph {
  margin-left: 30px;
  margin: 5px 5px 0px 10px;
  height: 50px;
  width: 50px;
}

.graph-info-container {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.categorys {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  height: 60px;
  justify-content: center;
}

.graph-info {
  display: flex;
  flex-direction: row;
  align-items: center;
  margin-right: 8px;
}

.graph-text {
  font-size: 13px;
  margin-right: 10px;
  width: 80px;
}

.graph-img {
  width: 10px;
  margin-right: 2px;
}

.graph-info span {
  font-size: 11px;
}

hr {
  margin: 5px 10px;
}

.btn,
a.btn,
button.btn {
  font-size: 20px;
  font-weight: 700;
  line-height: 1.5;
  position: relative;
  display: inline-block;
  padding: 15px 10px;
  cursor: pointer;
  user-select: none;
  transition: all 0.3s;
  text-align: center;
  text-decoration: none;
  letter-spacing: 0.1em;
  color: #fff;
  position: fixed;
  bottom: 60px;
  right: 10px;
  border: none;
}

button.btn {
  background-color: #9fd6d6;
}

button.btn:hover {
  background-color: #9fd6d6;
}

.btn--radius {
  border-radius: 100vh;
}

footer {
  background-color: #8ac5c5;
  position: fixed;
  top: 620px;
  width: 100%;
  height: 50px;
  margin: 0px;
}

.toggle-analytics {
  transition: transform 0.3s ease, rotate 0.3s ease; /* クリック時の回転アニメーション */
}

.toggle-analytics.up {
  transform: rotate(180deg); /* 上向きに180度回転 */
}

.show {
  display: block !important;
}

/* モーダル用 */
/* モーダル全体のスタイル */
.modal {
  /* 画面全体に */
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  /* 前面表示 */
  z-index: 999;
  /* 子要素を中央配置 */
  display: flex;
  align-items: center;
  justify-content: center;
}

/* モーダル内ウィンドウのスタイル */
.modal-content {
  margin: 55px 0px 0 0px;
  background-color: #fefefe;
  box-sizing: border-box;
  padding: 20px 0px;
  border: 1px solid #888;
  border-radius: 20px;
  box-shadow: 5px 5px 10px 5px rgba(0, 0, 0, 0.25);
  font-size: 1rem;
  overflow-y: auto;
  /* コンテンツがウィンドウからはみ出した場合にスクロールバーを表示 */
  overflow-y: auto;
}
/* モーダル内のデザイン */
.button-container {
  display: flex;
  justify-content: space-between;
}

.modal-top-border {
  margin: 0px 0px 10px 140px;
  text-align: center;
  width: 100px;
}

.cancel {
  font-size: 15px;
  padding: 5px 10px;
  margin: 0px 10px 5px;
  color: #fff;
  background-color: #c6c6c6;
  border: none;
  border-radius: 10vh;
}

.post {
  font-size: 15px;
  padding: 5px 10px;
  margin: 0px 10px 10px;
  width: 95px;
  color: #fff;
  background-color: #9fd6d6;
  border: none;
  border-radius: 10vh;
}

.post-input {
  margin: 10px;
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  flex-direction: row;
}

.user-input {
  font-size: 15px;
}

/* フェードイン（アニメーション前） */
.fade-in {
  transform: translateY(100%); /* 一旦非表示にしておく */
}

/* ボタンが押されたら付与するクラス */
.show {
  /* 縦方向の移動 */
  transform: translateY(0);
  transition: transform 1s ease-in-out; /* アニメーション時間、開始前後の時間 */
}
